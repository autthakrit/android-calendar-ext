# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane dd

default_platform(:android)

before_each do |lane, options|
    options["libModule"] = "calendarext"
    options["libModuleGradleFile"] = options["libModule"] + "/build.gradle"
end

platform :android do

    desc "Runs all the tests"
    private_lane :test do
        puts "Start running all tests .."
        gradle(task: "testDebugUnitTest")
    end

    private_lane :deploy do | options |
        puts "Start uploading to google play .."
        supply(
                package_name: options[:package_name],
                aab: lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH],
                skip_upload_apk: true,
                skip_upload_screenshots: true,
                track: 'internal',
        )
    end

    desc "Bump build number and commit"
    lane :bump_version do |options|
        gradleFile = options["libModuleGradleFile"]
        moduleName = options["libModule"]
        android_set_version_code(gradle_file: options["libModuleGradleFile"])
        commitBumpVersion(gradleFile, moduleName)
    end

    desc "Commit bump build number"
    lane :commit_bump_version do |options|
        gradleFile = options["libModuleGradleFile"]
        moduleName = options["libModule"]
        commitBumpVersion(gradleFile, moduleName)
    end

    def commitBumpVersion(gradleFile, moduleName)
        version = getVersionName(gradleFile)
        build = getVersionCode(gradleFile)
        commit_message = "Version bumped by fastlane v%s (%s)" % [version, build]
        commit_android_version_bump(
            gradle_file_folder: moduleName,
            message: commit_message
        )
    end

    desc "Set version name"
    lane :set_version do |options|
        gradleFile = options["libModuleGradleFile"]
        version = getVersionName(gradleFile)
        build = getVersionCode(gradleFile)
        puts "Current version is %s build %s" % [version, build]
        new_version = prompt(text: "Enter new version: ")
        android_set_version_name(
            version_name: new_version,
            gradle_file: gradleFile
        )
    end

    desc "Print current app version"
    lane :get_version do |options|
        gradleFile = options["libModuleGradleFile"]
        build = getVersionCode(gradleFile)
        version = getVersionName(gradleFile)
        puts "version: %s build %s" % [version, build]
    end

    def getVersionCode(gradleFile)
        return android_get_version_code(
            gradle_file: gradleFile
        )
    end
    def getVersionName(gradleFile)
        return android_get_version_name(
            gradle_file: gradleFile
        )
    end

end
